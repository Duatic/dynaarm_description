<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/jan/duatic/dev-workspace/src/dynaarm_description/dynaarm_standalone_description/resource/urdf/../xacro/dynaarm_standalone.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="dynaarm">
  <link name="world"/>
  <joint name="joint_base" type="fixed">
    <parent link="world"/>
    <child link="dynaarm_base"/>
    <origin rpy="0 0 0" xyz="0 0 0.085"/>
    <limit effort="2000" lower="0" upper="0" velocity="0"/>
  </joint>
  <link name="dynaarm_base">
    <visual>
      <geometry>
        <mesh filename="file:///home/jan/duatic/dev-workspace/install/dynaarm_description_common/share/dynaarm_description_common/resource/meshes/base_detailed_mesh.dae" scale="1.0 1.0 1.0"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1.894"/>
      <origin rpy="0 0 0" xyz="8.222640999999999e-06 -0.000310936808 -0.036738569268"/>
      <inertia ixx="0.0027672584741849997" ixy="3.9341411499999997e-07" ixz="-1.49570272e-07" iyy="0.0028951601054409996" iyz="2.532409214e-05" izz="0.003138952392041"/>
    </inertial>
  </link>
  <!-- Fixed joint to add dummy inertia link -->
  <joint name="dynaarm_base_to_dynaarm_base_inertia" type="fixed">
    <parent link="dynaarm_base"/>
    <child link="dynaarm_base_inertia"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
  </joint>
  <!-- Dummy inertia link, because KDL cannot have inertia on the base link -->
  <link name="dynaarm_base_inertia">
    <inertial>
      <mass value="1.894"/>
      <origin rpy="0 0 0" xyz="8.222640999999999e-06 -0.000310936808 -0.036738569268"/>
      <inertia ixx="0.0027672584741849997" ixy="3.9341411499999997e-07" ixz="-1.49570272e-07" iyy="0.0028951601054409996" iyz="2.532409214e-05" izz="0.003138952392041"/>
    </inertial>
  </link>
  <link name="dynaarm_SHOULDER">
    <visual>
      <geometry>
        <mesh filename="file:///home/jan/duatic/dev-workspace/install/dynaarm_description_common/share/dynaarm_description_common/resource/meshes/shoulder_detailed_mesh.dae" scale="1.0 1.0 1.0"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="2.644"/>
      <origin rpy="0 0 0" xyz="0.0 0.0 -0.0017336"/>
      <inertia ixx="0.010301209999999998" ixy="-5.0849999999999996e-05" ixz="0.0" iyy="0.0030164999999999997" iyz="0.0" izz="0.01009904"/>
    </inertial>
    <collision>
      <origin rpy="1.57 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.24" radius="0.05"/>
      </geometry>
    </collision>
  </link>
  <link name="dynaarm_UPPERARM">
    <visual>
      <geometry>
        <mesh filename="file:///home/jan/duatic/dev-workspace/install/dynaarm_description_common/share/dynaarm_description_common/resource/meshes/upperarm_detailed_mesh.dae" scale="1.0 1.0 1.0"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1.394"/>
      <origin rpy="0 0 0" xyz="0.21109 2.2e-05 -0.000317"/>
      <inertia ixx="0.00116179" ixy="-7.2e-07" ixz="-0.00014044999999999997" iyy="0.046092126" iyz="7e-09" izz="0.04627953"/>
    </inertial>
    <collision>
      <origin rpy="1.57 0 1.57" xyz="0.25 0 0"/>
      <geometry>
        <cylinder length="0.4" radius="0.05"/>
      </geometry>
    </collision>
  </link>
  <link name="dynaarm_ELBOW">
    <visual>
      <geometry>
        <mesh filename="file:///home/jan/duatic/dev-workspace/install/dynaarm_description_common/share/dynaarm_description_common/resource/meshes/elbow_detailed_mesh.dae" scale="1.0 1.0 1.0"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1.1"/>
      <origin rpy="0 0 0" xyz="0.0068 -0.0848 -0.0006"/>
      <inertia ixx="0.0013843" ixy="-4.16e-05" ixz="8.5e-06" iyy="0.0007168" iyz="-1.05e-05" izz="0.0011300999999999998"/>
    </inertial>
    <collision>
      <origin rpy="0 1.57 0" xyz="0.185 -0.0935 0"/>
      <geometry>
        <cylinder length="0.46" radius="0.047"/>
      </geometry>
    </collision>
  </link>
  <link name="dynaarm_FOREARM">
    <visual>
      <geometry>
        <mesh filename="file:///home/jan/duatic/dev-workspace/install/dynaarm_description_common/share/dynaarm_description_common/resource/meshes/forearm_detailed_mesh.dae" scale="1.0 1.0 1.0"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="0.342"/>
      <origin rpy="0 0 0" xyz="0.0 0.0 0.2143"/>
      <inertia ixx="0.006999999999999999" ixy="0.0" ixz="0.0" iyy="0.006999999999999999" iyz="0.0" izz="0.0063999999999999994"/>
    </inertial>
  </link>
  <joint name="SH_ROT" type="revolute">
    <parent link="dynaarm_base"/>
    <child link="dynaarm_SHOULDER"/>
    <axis xyz="0 0 1"/>
    <limit command_effort="40" current="10" effort="40" gear_velocity="4" lower="-4.7123889803850005" upper="4.7123889803850005" velocity="4"/>
    <!-- limit effort also defines torque limit and freeze controller gains -->
    <origin rpy="0 0 0" xyz="0 0 0.06"/>
  </joint>
  <joint name="SH_FLE" type="revolute">
    <parent link="dynaarm_SHOULDER"/>
    <child link="dynaarm_UPPERARM"/>
    <axis xyz="0 0 -1"/>
    <limit command_effort="40" current="10" effort="40" gear_velocity="4" lower="-1.870796326795" upper="1.870796326795" velocity="4"/>
    <!-- limit effort also defines torque limit and freeze controller gains -->
    <origin rpy="1.570796326795 -1.570796326795 0" xyz="0 0 0.0"/>
  </joint>
  <joint name="EL_FLE" type="revolute">
    <parent link="dynaarm_UPPERARM"/>
    <child link="dynaarm_ELBOW"/>
    <axis xyz="0 0 1"/>
    <limit command_effort="40" current="10" effort="40" gear_velocity="4" lower="-3.14159265359" upper="3.14159265359" velocity="4"/>
    <!-- limit effort also defines torque limit and freeze controller gains -->
    <origin rpy="3.14159265359 0 0" xyz="0.412 0 0"/>
  </joint>
  <joint name="FA_ROT" type="revolute">
    <parent link="dynaarm_ELBOW"/>
    <child link="dynaarm_FOREARM"/>
    <axis xyz="0 0 1"/>
    <limit command_effort="40" current="10" effort="40" gear_velocity="4" lower="-4.7123889803850005" upper="4.7123889803850005" velocity="4"/>
    <!-- limit effort also defines torque limit and freeze controller gains -->
    <origin rpy="1.570796326795 0 1.570796326795" xyz="0.0325 -0.092 0"/>
  </joint>
  <link name="dynaarm_END_EFFECTOR">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
      <mass value="0.02"/>
      <inertia ixx="0.01" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.01"/>
    </inertial>
  </link>
  <gazebo reference="dynaarm_END_EFFECTOR">
    <kp>10000.0</kp>
    <kd>10.0</kd>
    <mu1>0.8</mu1>
    <mu2>0.8</mu2>
  </gazebo>
  <joint name="ee_fix_joint" type="fixed">
    <parent link="dynaarm_FOREARM"/>
    <child link="dynaarm_END_EFFECTOR"/>
    <origin rpy="0.0 0.0 1.570796326795" xyz="0.0 0.0 0.25"/>
    <limit effort="2000" lower="0" upper="0" velocity="0"/>
  </joint>
  <ros2_control name="DynaarmSystem" type="system">
    <hardware>
      <plugin>dynaarm_mock_hardware_interface/DynaarmMockHardwareInterface</plugin>
    </hardware>
    <joint name="SH_ROT">
      <param name="address">1</param>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
      <state_interface name="position_commanded"/>
      <state_interface name="velocity_commanded"/>
      <state_interface name="effort_commanded"/>
      <state_interface name="p_gain_commanded"/>
      <state_interface name="i_gain_commanded"/>
      <state_interface name="d_gain_commanded"/>
      <state_interface name="motor_position"/>
      <state_interface name="motor_velocity"/>
      <state_interface name="motor_effort"/>
      <state_interface name="motor_position_commanded"/>
      <state_interface name="motor_velocity_commanded"/>
      <state_interface name="motor_effort_commanded"/>
      <state_interface name="motor_temperature_system"/>
      <state_interface name="motor_temperature_coil_A"/>
      <state_interface name="motor_temperature_coil_B"/>
      <state_interface name="motor_temperature_coil_C"/>
      <state_interface name="motor_bus_voltage"/>
      <state_interface name="command_freeze_mode"/>
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <command_interface name="effort"/>
      <command_interface name="p_gain"/>
      <command_interface name="i_gain"/>
      <command_interface name="d_gain"/>
      <command_interface name="command_freeze_mode"/>
    </joint>
    <joint name="SH_FLE">
      <param name="address">2</param>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
      <state_interface name="position_commanded"/>
      <state_interface name="velocity_commanded"/>
      <state_interface name="effort_commanded"/>
      <state_interface name="p_gain_commanded"/>
      <state_interface name="i_gain_commanded"/>
      <state_interface name="d_gain_commanded"/>
      <state_interface name="motor_position"/>
      <state_interface name="motor_velocity"/>
      <state_interface name="motor_effort"/>
      <state_interface name="motor_position_commanded"/>
      <state_interface name="motor_velocity_commanded"/>
      <state_interface name="motor_effort_commanded"/>
      <state_interface name="motor_temperature_system"/>
      <state_interface name="motor_temperature_coil_A"/>
      <state_interface name="motor_temperature_coil_B"/>
      <state_interface name="motor_temperature_coil_C"/>
      <state_interface name="motor_bus_voltage"/>
      <state_interface name="command_freeze_mode"/>
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <command_interface name="effort"/>
      <command_interface name="p_gain"/>
      <command_interface name="i_gain"/>
      <command_interface name="d_gain"/>
      <command_interface name="command_freeze_mode"/>
    </joint>
    <joint name="EL_FLE">
      <param name="address">3</param>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
      <state_interface name="position_commanded"/>
      <state_interface name="velocity_commanded"/>
      <state_interface name="effort_commanded"/>
      <state_interface name="p_gain_commanded"/>
      <state_interface name="i_gain_commanded"/>
      <state_interface name="d_gain_commanded"/>
      <state_interface name="motor_position"/>
      <state_interface name="motor_velocity"/>
      <state_interface name="motor_effort"/>
      <state_interface name="motor_position_commanded"/>
      <state_interface name="motor_velocity_commanded"/>
      <state_interface name="motor_effort_commanded"/>
      <state_interface name="motor_temperature_system"/>
      <state_interface name="motor_temperature_coil_A"/>
      <state_interface name="motor_temperature_coil_B"/>
      <state_interface name="motor_temperature_coil_C"/>
      <state_interface name="motor_bus_voltage"/>
      <state_interface name="command_freeze_mode"/>
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <command_interface name="effort"/>
      <command_interface name="p_gain"/>
      <command_interface name="i_gain"/>
      <command_interface name="d_gain"/>
      <command_interface name="command_freeze_mode"/>
    </joint>
    <joint name="FA_ROT">
      <param name="address">4</param>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
      <state_interface name="position_commanded"/>
      <state_interface name="velocity_commanded"/>
      <state_interface name="effort_commanded"/>
      <state_interface name="p_gain_commanded"/>
      <state_interface name="i_gain_commanded"/>
      <state_interface name="d_gain_commanded"/>
      <state_interface name="motor_position"/>
      <state_interface name="motor_velocity"/>
      <state_interface name="motor_effort"/>
      <state_interface name="motor_position_commanded"/>
      <state_interface name="motor_velocity_commanded"/>
      <state_interface name="motor_effort_commanded"/>
      <state_interface name="motor_temperature_system"/>
      <state_interface name="motor_temperature_coil_A"/>
      <state_interface name="motor_temperature_coil_B"/>
      <state_interface name="motor_temperature_coil_C"/>
      <state_interface name="motor_bus_voltage"/>
      <state_interface name="command_freeze_mode"/>
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <command_interface name="effort"/>
      <command_interface name="p_gain"/>
      <command_interface name="i_gain"/>
      <command_interface name="d_gain"/>
      <command_interface name="command_freeze_mode"/>
    </joint>
  </ros2_control>
  <ros2control name="DynaarmGpioInterfacesSystem" type="system">
    <hardware>
      <plugin>mock_components/GenericSystem</plugin>
    </hardware>
    <gpio name="gpio_dynaarm_interfaces">
      <state_interface name="joystick_axis_0"/>
      <command_interface name="joystick_axis_0"/>
      <state_interface name="joystick_axis_1"/>
      <command_interface name="joystick_axis_1"/>
      <state_interface name="joystick_axis_2"/>
      <command_interface name="joystick_axis_2"/>
      <state_interface name="joystick_axis_3"/>
      <command_interface name="joystick_axis_3"/>
      <state_interface name="joystick_axis_4"/>
      <command_interface name="joystick_axis_4"/>
      <state_interface name="joystick_axis_5"/>
      <command_interface name="joystick_axis_5"/>
      <state_interface name="joystick_button_0"/>
      <command_interface name="joystick_button_0"/>
      <state_interface name="joystick_button_1"/>
      <command_interface name="joystick_button_1"/>
      <state_interface name="joystick_button_2"/>
      <command_interface name="joystick_button_2"/>
      <state_interface name="joystick_button_3"/>
      <command_interface name="joystick_button_3"/>
      <state_interface name="joystick_button_4"/>
      <command_interface name="joystick_button_4"/>
      <state_interface name="joystick_button_5"/>
      <command_interface name="joystick_button_5"/>
      <state_interface name="joystick_button_6"/>
      <command_interface name="joystick_button_6"/>
      <state_interface name="joystick_button_7"/>
      <command_interface name="joystick_button_7"/>
      <state_interface name="joystick_button_8"/>
      <command_interface name="joystick_button_8"/>
      <state_interface name="joystick_button_9"/>
      <command_interface name="joystick_button_9"/>
      <state_interface name="joystick_button_10"/>
      <command_interface name="joystick_button_10"/>
      <state_interface name="joystick_button_11"/>
      <command_interface name="joystick_button_11"/>
      <state_interface name="joystick_button_12"/>
      <command_interface name="joystick_button_12"/>
      <state_interface name="joystick_button_13"/>
      <command_interface name="joystick_button_13"/>
      <state_interface name="joystick_button_14"/>
      <command_interface name="joystick_button_14"/>
      <state_interface name="joystick_button_15"/>
      <command_interface name="joystick_button_15"/>
      <state_interface name="joystick_button_16"/>
      <command_interface name="joystick_button_16"/>
      <state_interface name="joystick_button_17"/>
      <command_interface name="joystick_button_17"/>
      <state_interface name="joystick_button_18"/>
      <command_interface name="joystick_button_18"/>
      <state_interface name="joystick_button_19"/>
      <command_interface name="joystick_button_19"/>
      <state_interface name="joystick_button_20"/>
      <command_interface name="joystick_button_20"/>
      <state_interface name="twist_linear_x"/>
      <command_interface name="twist_linear_x"/>
      <state_interface name="twist_linear_y"/>
      <command_interface name="twist_linear_y"/>
      <state_interface name="twist_linear_z"/>
      <command_interface name="twist_linear_z"/>
      <state_interface name="twist_angular_x"/>
      <command_interface name="twist_angular_x"/>
      <state_interface name="twist_angular_y"/>
      <command_interface name="twist_angular_y"/>
      <state_interface name="twist_angular_z"/>
      <command_interface name="twist_angular_z"/>
    </gpio>
  </ros2control>
</robot>
